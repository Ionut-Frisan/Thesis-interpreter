
class Node {
    init(value) {
        this.value = value;
        this.next = null;
    }
}

class Stack {
    init() {
        this.head = null;
        this.length = 0;
    }
    
    isEmpty() {
        return this.length == 0;
    }
    
    push(value) {
        this.length++;
        var newNode = Node(value);
        
        newNode.next = this.head;
        this.head = newNode;
    }
    
    pop() {
        if (this.isEmpty()) {
            print "Cannot pop from an empty stack";
            return null;
        } else {
            this.length--;
            var tmp = this.head;
            this.head = this.head.next;
            return tmp.value;
        }
    }
    
    peek() {
        if (this.isEmpty()) {
            print "Stack is empty";
            return null;
        } else {
            return this.head.value;
        }
    }
}

var stack = Stack();


// var LOOP_COUNT = 100000;

fun push_elements() {
    for(var i=0; i<LOOP_COUNT; i++) {
        stack.push(i);
    }
}

fun pop_elements() {
    for(var i=0; i<LOOP_COUNT; i++) {
        stack.pop;
    }
}

